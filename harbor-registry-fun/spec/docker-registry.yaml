apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: registry-pvc
  namespace: harbor
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: standard
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: registry-config
  namespace: harbor
data:
  config.yml: |
    version: 0.1
    log:
      fields:
        service: registry
    storage:
      cache:
        blobdescriptor: inmemory
      filesystem:
        rootdirectory: /var/lib/registry
    http:
      addr: :5000
      headers:
        X-Content-Type-Options: [nosniff]
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  namespace: harbor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
      - name: registry
        image: registry:2.8.3
        ports:
        - containerPort: 5000
        volumeMounts:
        - name: registry-storage
          mountPath: /var/lib/registry
        - name: registry-config
          mountPath: /etc/docker/registry
        resources:
          requests:
            memory: 256Mi
            cpu: 100m
          limits:
            memory: 512Mi
            cpu: 500m
      volumes:
      - name: registry-storage
        persistentVolumeClaim:
          claimName: registry-pvc
      - name: registry-config
        configMap:
          name: registry-config
---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry
  namespace: harbor
spec:
  type: NodePort
  selector:
    app: docker-registry
  ports:
  - port: 5000
    targetPort: 5000
    nodePort: 30500
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry-ui
  namespace: harbor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry-ui
  template:
    metadata:
      labels:
        app: registry-ui
    spec:
      containers:
      - name: ui
        image: joxit/docker-registry-ui:latest
        ports:
        - containerPort: 80
        env:
        - name: REGISTRY_TITLE
          value: "Docker Registry"
        - name: REGISTRY_URL
          value: "http://localhost:30500"
        - name: SINGLE_REGISTRY
          value: "true"
        - name: DELETE_IMAGES
          value: "true"
        - name: NGINX_PROXY_PASS_URL
          value: "http://docker-registry:5000"
        resources:
          requests:
            memory: 64Mi
            cpu: 50m
          limits:
            memory: 128Mi
            cpu: 200m
---
apiVersion: v1
kind: Service
metadata:
  name: registry-ui
  namespace: harbor
spec:
  type: NodePort
  selector:
    app: registry-ui
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30080
