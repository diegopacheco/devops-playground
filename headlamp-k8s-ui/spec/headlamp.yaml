apiVersion: v1
kind: Namespace
metadata:
  name: headlamp
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: headlamp-admin
  namespace: headlamp
---
apiVersion: v1
kind: Secret
metadata:
  name: headlamp-admin-token
  namespace: headlamp
  annotations:
    kubernetes.io/service-account.name: headlamp-admin
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: headlamp-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: headlamp-admin
  namespace: headlamp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: headlamp
  namespace: headlamp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: headlamp
  template:
    metadata:
      labels:
        app: headlamp
    spec:
      serviceAccountName: headlamp-admin
      initContainers:
      - name: setup-kubeconfig
        image: bitnami/kubectl:latest
        command:
        - sh
        - -c
        - |
          TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
          CA_CERT=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          KUBERNETES_SERVICE_HOST=${KUBERNETES_SERVICE_HOST}
          KUBERNETES_SERVICE_PORT=${KUBERNETES_SERVICE_PORT}
          mkdir -p /headlamp-config/.kube
          cat > /headlamp-config/.kube/config <<EOF
          apiVersion: v1
          kind: Config
          clusters:
          - cluster:
              certificate-authority: ${CA_CERT}
              server: https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            name: kind-cluster
          contexts:
          - context:
              cluster: kind-cluster
              user: headlamp-admin
            name: kind-cluster
          current-context: kind-cluster
          users:
          - name: headlamp-admin
            user:
              token: ${TOKEN}
          EOF
        volumeMounts:
        - name: kubeconfig
          mountPath: /headlamp-config
      containers:
      - name: headlamp
        image: ghcr.io/headlamp-k8s/headlamp:latest
        ports:
        - containerPort: 4466
        env:
        - name: KUBECONFIG
          value: /headlamp-config/.kube/config
        - name: HEADLAMP_CONFIG_BASE_URL
          value: ""
        volumeMounts:
        - name: kubeconfig
          mountPath: /headlamp-config
      volumes:
      - name: kubeconfig
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: headlamp
  namespace: headlamp
spec:
  type: ClusterIP
  selector:
    app: headlamp
  ports:
  - port: 80
    targetPort: 4466
    protocol: TCP
