####################
# Ensure that this url is accessible locally and returns valid Prana healthcheck responses
# Note that this is likely on the same port as eureka.port
prana.host.healthcheck.url=http://127.0.0.1:22222/ok
# Timeout for calls to the healthcheck in ms
prana.host.healthcheck.timeout=1500
# List of accepted encodings for the Prana proxy
prana.proxy.req.acceptencoding=gzip

####################
# Eureka Service Registration Properties
####################
# Change this to the application name for your side managed process
eureka.name=PranaDynomiteOregon1
# Change this to the VIP address for you side managed process
eureka.vipAddress=PranaDynomiteOregon1
# This is the port your want clients to connect to in your side managed process
eureka.port=8080
eureka.serviceUrl.default=http://192.168.99.100:8080/eureka/v2/

####################
# Eureka Connectivity Properties
####################
# Change this to a working eureka-client configuration.  For simplicity
# this Prana example assumes a single eureka server
#eureka.serviceUrl.default=http://eurekaserverhostnameorip:8080/eureka
# In Karyon 2.0, Erueka will assume DatacenterInfo (Amazon) and without the
# below property, service registration will fail if you are running outside of
# Amazon (for development).  In Amazon, delete this property.
eureka.validateInstanceId=false